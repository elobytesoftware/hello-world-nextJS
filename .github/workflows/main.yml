name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-main
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Optional: build on the runner to fail fast; prod build still happens on the server
      - name: Install deps (runner)
        run: npm ci || npm install

      - name: Build (runner)
        run: npm run build

      - name: Deploy to EC2 and restart
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # PRIVATE key (include BEGIN/END lines)
          EC2_IP: ${{ secrets.EC2_IP }}            # Your EC2 public IPv4
        run: |
          mkdir -p ~/.ssh
          printf "%s" "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Run a robust remote script via a single-quoted heredoc so nothing expands on the runner
          ssh \
            -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=30 \
            -o ServerAliveCountMax=10 \
            -i ~/.ssh/id_rsa ubuntu@"$EC2_IP" 'bash -s' <<'REMOTE'
          set -euo pipefail

          APP_DIR="/home/ubuntu/hello-world-nextJS"   # change only if your project lives elsewhere
          cd "$APP_DIR"

          echo "STEP: sync git"
          git fetch origin main
          git reset --hard origin/main

          echo "STEP: versions"
          which node || true
          node -v || true
          npm -v  || true
          pm2 -v  || true

          echo "STEP: ensure pm2"
          if ! command -v pm2 >/dev/null 2>&1; then
            sudo npm i -g pm2
          fi

          echo "STEP: install & build (server)"
          npm ci || npm install
          npm run build

          echo "STEP: start/restart with pm2"
          if pm2 describe nextapp >/dev/null 2>&1; then
            pm2 restart nextapp
          else
            # requires a "start" script in package.json, e.g. "next start -p 3000"
            pm2 start npm --name "nextapp" -- start
          fi

          pm2 save
          echo "DEPLOY: done"
          REMOTE
