name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-main
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Build on the runner first so we fail fast if something is broken
      - name: Install deps (runner)
        run: npm ci || npm install

      - name: Build (runner)
        run: npm run build

      - name: Deploy to EC2 and restart
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}  # PRIVATE key (BEGIN/END included)
          EC2_IP: ${{ secrets.EC2_IP }}            # Your EC2 public IPv4
        run: |
          mkdir -p ~/.ssh
          printf "%s" "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          ssh -tt \
            -o StrictHostKeyChecking=no \
            -o ServerAliveInterval=30 \
            -o ServerAliveCountMax=10 \
            -i ~/.ssh/id_rsa ubuntu@"$EC2_IP" 'bash -lc "
              set -euxo pipefail

              cd /home/ubuntu/hello-world-nextJS

              echo STEP: sync git
              git fetch origin main
              git checkout -f main
              git reset --hard origin/main

              echo STEP: versions
              which node || true
              node -v || true
              npm -v  || true
              pm2 -v  || true   # pm2 must already be installed on the server

              echo STEP: install + build (server)
              npm ci || npm install
              npm run build

              echo STEP: pm2 restart/start
              if pm2 describe nextapp >/dev/null 2>&1; then
                pm2 restart nextapp
              else
                # requires \"start\" in package.json, e.g. \"next start -p 3000\"
                pm2 start \"npm -- start\" --name nextapp --time
              fi

              pm2 save
            "'
